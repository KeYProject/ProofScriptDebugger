plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id 'io.franzbecker.gradle-lombok' version '2.0' apply false
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.5"
}

allprojects {
    apply plugin: 'maven'
    group = 'edu.kit.iti.formal.psdbg'
    version = '1.2-experimental'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'org.openjfx.javafxplugin'
    apply plugin: "org.jetbrains.gradle.plugin.idea-ext"

    sourceCompatibility = 11
    targetCompatibility = 11
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    lombok { // optional: values below are the defaults
        version = "1.18.4"
        sha256 = "39f3922deb679b1852af519eb227157ef2dd0a21eec3542c8ce1b45f2df39742"
    }


    repositories {
        mavenLocal()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "http://dl.bintray.com/jerady/maven" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    task printClasspath {
        doLast {//            sourceSets.test.runtimeClasspath.
            sourceSets.test.runtimeClasspath.each { println it }

        }
    }

    dependencies {
        compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
        compile group: 'com.google.guava', name: 'guava', version: '25.0-jre'
        compile group: 'commons-io', name: 'commons-io', version: '2.6'
        compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.20'
    }


    def javaExports = ["--add-exports", "javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED",
                       "--add-exports", "javafx.controls/com.sun.javafx.scene.control.skin=ALL-UNNAMED",
                       "--add-exports", "javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED",
    ]

    javafx {
        modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.web']
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs = javaExports
        options.compilerArgs << "-Xlint:none" << "-nowarn"

        options.fork = true
        options.forkOptions.executable = "javac"
    }


}
