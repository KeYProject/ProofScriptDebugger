plugins {
    id "com.github.voplex95.lesscompiler" version "1.0.3"
}

apply plugin: 'antlr'

description = 'ui'

generateGrammarSource {
    arguments += ["-long-messages", "-package","antlrgrammars"]
}

lessCompile {
    source = file('src/main/resources/edu/kit/iti/formal/psdbg/gui/debugger-ui.less')
    target = file('build/resources/main/edu/kit/iti/formal/psdbg/gui/')
    //compress = true
}

processResources.dependsOn lessCompile

dependencies {
    compile group: 'de.jensd', name: 'fontawesomefx-materialdesignfont', version: '1.7.22-4'
    compile group: 'de.jensd', name: 'fontawesomefx-commons', version: '8.15'

//    compile group: 'de.jensd', name: 'fontawesomefx-materialdesignfont', version: '2.0.26-9.1.2'
//    compile group: 'de.jensd', name: 'fontawesomefx-commons', version: '9.1.2'
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.9.0'
    //compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '1.0.0-SNAPSHOT'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'

    compile group: 'org.antlr', name: 'antlr4', version: '4.7'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7'

    //compile files("$rootDir/DockFX/build/libs/DockFX.jar")

    compile project(':rt-key')
    compile project(':DockFX')
    compile project(':lint')
}

def mainClassName = 'edu.kit.iti.formal.psdbg.gui.ProofScriptDebugger'

task runApp(type: JavaExec) {
    jvmArgs << '-Dsun.awt.disablegrab=true' << '-Dglass.disableGrab=true'
    /*applicationDefaultJvmArgs = [
            // For accessing VirtualFlow field from the base class in GridViewSkin
            "--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED",
            // For accessing InputMap used in RangeSliderBehavior
            "--add-exports=javafx.controls/com.sun.javafx.scene.control.inputmap=ALL-UNNAMED"
    ]*/
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
}


task distJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    classifier="exe"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
distJar.dependsOn jar