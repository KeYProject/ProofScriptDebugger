 
script prove_transitive(){
 symbex;
 foreach{
   simp_upd;
   simp_heap;

   //simp_heap;
 }
 cases{
 // case match  `seqPerm(?Res0Copy, ?Arr), seqPerm(?R, ?Res0Copy) ==>`:

   //case match `seqPerm(?Res0Copy, ?Arr), seqPerm(?Res0Sort, ?Res0Copy), seqPerm(?Res1Copy0, ?Res0Sort),seqPerm(?Res2Copy1, ?Res0Sort) ==> seqPerm(?Res2Copy1, ?Arr)`:
   // SeqPermSym on=`seqPerm(?Res0Copy, ?Arr) ==>`[];

   // case match `seqPerm(?Res0Copy, ?Arr):?X, seqPerm(?Res0Sort, ?Res0Copy), seqPerm(?Res1Copy0, ?Res0Sort),seqPerm(?Res2Copy1, ?Res0Sort) ==> seqPerm(?Res2Copy1, ?Arr)`:
   //     SeqPermSym on=X;

   // SeqPermSym on=`seqPerm(?Res0Sort, ?Res0Copy) ==>`;
   // SeqPermSym on=`seqPerm(?Res1Copy0, ?Res0Sort)==>`;
   // SeqPermSym on=`seqPerm(?Res2Copy1, ?Res0Sort) ==>`;
   // SeqPermTrans on=`seqPerm(?Res0Copy, ?Arr) ==>`;
   // SeqPermTrans on=`seqPerm(?Arr, ?Res0Sort) ==>`
   //              with=`seqPerm(?Arr,?Res2Copy1)`;
   // SeqPermSym on=`seqPerm(?Arr,?Res2Copy1)`;
   // auto;

   //case match
  // `seqPerm(?Res0Copy, ?Arr),
   // seqPerm(?Res0Sort, ?Res0Copy),
   // seqPerm(?Res1Copy0, ?Res0Sort) ==>
   //          seqPerm(?Res1Copy0, ?Arr)`:
   //  SeqPermSym on=`seqPerm(?Res0Copy, ?Arr)`;
     //SeqPermSym on=`seqPerm(?Res0Sort, ?Res0Copy)`;
     //SeqPermSym on=`seqPerm(?Res1Copy0, ?Res0Sort)`;
     //SeqPermTrans on=`seqPerm(?Res0Copy, ?Arr)`;
     //SeqPermTrans on=`seqPerm(?Arr, ?Res0Sort)`
     //SeqPermSym on=`==> seqPerm(?Res1Copy0, ?Arr)`;
     //auto;

    // default:
    //    auto;

  } 
}
